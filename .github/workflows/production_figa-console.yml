# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - figa-console

on:
  push:
    branches:
      - production
  workflow_dispatch:

jobs:

  schema_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # - name: Set up Node.js version
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '20.x'
      #     cache-dependency-path: prisma/package-lock.json

      # - name: npm install, build, and test
      #   run: |
      #     npm install prisma

      - name: echo env
        run: echo DATABASE_URL=${{secrets.DATABASE_URL}} > .env

      - name: Zip artifact for deployment
        run: zip schema.zip -r node_modules prisma .env

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: schema
          path: schema.zip

  migrate:
    runs-on: ubuntu-latest
    needs: schema_build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: schema

      - name: Unzip artifact for deployment
        run: unzip schema.zip
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_3F8E6D3615424F9EB4993D6EE7B6E1EE }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_95CAC1B949F34AA9A39F0AF9D5B5E616 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_7B194F1E7ABD49209198F45F8F172BAE }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'figa-console'
          slot-name: 'Production'
          package: .
          clean: true

  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Node.js version
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '20.x'

  #     - name: npm install, build, and test
  #       run: |
  #         npm install
  #         npm run build --if-present
  #         npm run test --if-present

  #     - name: Zip artifact for deployment
  #       run: |
  #         mv .next/static .next/standalone/.next
  #         mv public .next/standalone
  #         zip release.zip -r .next/standalone

  #     - name: Upload artifact for deployment job
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: node-app
  #         path: release.zip

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build, migrate]
  #   environment:
  #     name: 'Production'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  #   permissions:
  #     id-token: write #This is required for requesting the JWT

  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: node-app

  #     - name: Unzip artifact for deployment
  #       run: unzip release.zip
      
  #     - name: Login to Azure
  #       uses: azure/login@v1
  #       with:
  #         client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_3F8E6D3615424F9EB4993D6EE7B6E1EE }}
  #         tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_95CAC1B949F34AA9A39F0AF9D5B5E616 }}
  #         subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_7B194F1E7ABD49209198F45F8F172BAE }}

  #     - name: 'Deploy to Azure Web App'
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v3
  #       with:
  #         app-name: 'figa-console'
  #         slot-name: 'Production'
  #         package: .
  #         clean: true
  #         startup-command: node .next/standalone/server.js
          